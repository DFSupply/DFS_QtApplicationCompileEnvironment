# Compile Environment for Qt Applications (windows)
# Use for apps that require QtWebEngine, otherwise recommend using the linux container with MXE
# DF Supply, Inc.
# Scott Moore
# 2/26/2022

FROM mcr.microsoft.com/windows/servercore:ltsc2022

# Install chocolatey
RUN powershell -NoProfile -ExecutionPolicy Bypass -Command \
    $Env:chocolateyVersion = '0.10.15' ; \
    $Env:chocolateyUseWindowsCompression = 'false' ; \
    "[Net.ServicePointManager]::SecurityProtocol = \"tls12, tls11, tls\"; iex ((New-Object System.Net.WebClient).DownloadString('http://chocolatey.org/install.ps1'))" && SET "PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin" && \
    choco feature enable -n=allowGlobalConfirmation

# Install MSVC 2019
RUN choco install visualstudio2019buildtools

# Install Git
RUN	choco install git
		
# Install JOM for multi-core builds
RUN choco install jom

# Setup build directories
RUN \
	mkdir build-env && \
	cd build-env
	
# Build Qt Source (native builds)
RUN \
	git clone https://github.com/qt/qt5 && \
	cd qt5 && \
	git checkout 5.15.2 && \
	git submodule update --init --recursive && \
	./configure -opensource -confirm-license -release -webengine-proprietary-codecs -nomake tests -nomake examples -qt-zlib -qt-libjpeg -qt-libpng -qt-freetype -xcb -sql-psql -sql-sqlite && \
	jom