# Compile Environment for Qt Applications (windows)
# Use for apps that require QtWebEngine, otherwise recommend using the linux container with MXE
# DF Supply, Inc.
# Scott Moore
# 2/26/2022

FROM mcr.microsoft.com/windows/servercore:ltsc2022

# Install chocolatey
RUN powershell -NoProfile -ExecutionPolicy Bypass -Command \
    $Env:chocolateyVersion = '0.10.15' ; \
    $Env:chocolateyUseWindowsCompression = 'false' ; \
    "[Net.ServicePointManager]::SecurityProtocol = \"tls12, tls11, tls\"; iex ((New-Object System.Net.WebClient).DownloadString('http://chocolatey.org/install.ps1'))" && SET "PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin" && \
    choco feature enable -n=allowGlobalConfirmation
    
# Install Curl
RUN choco install curl

# Install .net 4.8
RUN choco install dotnetfx

# Install MSVC 2019
RUN choco install visualstudio2019buildtools && \
	choco install visualstudio2019-workload-vctools && \
	choco install visualstudio2019-workload-universal && \
	choco install visualstudio2019-workload-nativedesktop && \
	choco install visualstudio2019-workload-universalbuildtools

# Install Git
RUN	choco install git
		
# Install JOM for multi-core builds
RUN choco install jom

# Install Perl
RUN choco install strawberryperl

# Install Ruby
RUN choco install ruby

# Install Python
RUN choco install python2

# Install sed
RUN choco install sed

# Setup build directories
RUN \
	mkdir build-env

# Download Qt Source
#RUN \
#	git clone https://github.com/qt/qt5 && \
#	cd qt5 && \
#	git checkout 5.15.2 && \
#	git submodule update --init --recursive

# vcpkg and required packages
RUN \
 	git clone https://github.com/microsoft/vcpkg && \
 	cd vcpkg && \
 	bootstrap-vcpkg.bat && \
 	vcpkg install openssl && \
 	vcpkg install zlib && \
 	vcpkg install libpq && \
	vcpkg install qt5:x64-windows && \
	vcpkg install qt5-3d:x64-windows && \
	vcpkg install qt5-activeqt:x64-windows && \
	vcpkg install qt5-charts:x64-windows && \
	vcpkg install qt5-declarative:x64-windows && \
	vcpkg install qt5-graphicaleffects:x64-windows && \
	vcpkg install qt5-location:x64-windows && \
	vcpkg install qt5-script:x64-windows && \
	vcpkg install qt5-svg:x64-windows && \
	vcpkg install qt5-tools:x64-windows && \
	vcpkg install qt5-translations:x64-windows && \
	vcpkg install qt5-webchannel:x64-windows && \
	vcpkg install qt5-webengine:x64-windows && \
	vcpkg install qt5-webglplugin:x64-windows && \
	vcpkg install qt5-websockets:x64-windows && \
	vcpkg install qt5-webview:x64-windows && \
	vcpkg install qt5-winextras:x64-windows && \
	vcpkg install qt5-xmlpatterns && \
	vcpkg integrate install

# Bootstrapping msvc tools
SHELL ["powershell"]
RUN Install-PackageProvider NuGet -Force
RUN Install-Module -Name WintellectPowerShell -Force
RUN rm C:\vcpkg\installed\x64-windows\tools\qt5\bin\qt.conf

	
ENTRYPOINT ["C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Auxiliary\\Build\\vcvars64.bat", "&&", "powershell.exe", "-NoLogo", "-ExecutionPolicy", "Bypass"]]
