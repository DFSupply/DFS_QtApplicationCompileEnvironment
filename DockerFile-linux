# Compile Environment for Qt 5/6 Applications (linux)
# DF Supply, Inc.
# Scott Moore
# 2/24/2022

FROM registry.access.redhat.com/ubi9/ubi

RUN \
	ulimit -n && \
	yum update -y && \
	yum install yum-utils -y && \
	yum-config-manager --enable codeready-builder-for-rhel-9-x86_64-rpms && \
	yum install python3 wget make cmake *mesa* libxcb* zlib* xz gcc gcc-c++ mingw32-gcc mingw32-gcc-c++ libXinerama* libxkbcommon* xcb* nss-devel glx-utils libevdev libgudev libinput mtdev dbus* libXcomposite-devel libXcursor-devel libXi-devel libXtst-devel libXdamage-devel libXrandr-devel ruby meson openssl-devel -y && \
	yum install perl libfontenc-devel -y && \
	yum group install "Development Tools" -y && \
	yum install llvm-toolset redhat-rpm-config clang clang-libs clang-devel llvm-devel libxshmfence libxshmfence-devel libatomic libstdc++ libstdc++-static ninja-build -y && \
	yum install gdb valgrind systemtap ltrace strace -y && \
	yum install gperf libX11 -y && \
	yum install postgresql-devel libpq -y && \
	yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm -y && \
	yum install p7zip lzip perl-IPC-Cmd -y && \
	yum install python3-html5lib bison flex nodejs cups-libs cups-devel libxkbfile libxkbfile-devel expat expat-devel -y

# Build Qt6 Source (native builds)
RUN \
	cd /opt/ && \
	wget -q https://download.qt.io/official_releases/qt/6.4/6.4.2/single/qt-everywhere-src-6.4.2.tar.xz && \
	tar -xf qt-everywhere-src-6.4.2.tar.xz && \
	rm qt-everywhere-src-6.4.2.tar.xz && \
	cd /opt/qt-everywhere-src-6.4.2 && \
	./configure -opensource -confirm-license -release -webengine-proprietary-codecs -nomake tests -nomake examples -qt-zlib -qt-libjpeg -qt-libpng -qt-freetype -xcb -sql-psql -sql-sqlite && \
	# sed -i -e 's|use_jumbo_build=true|use_jumbo_build=false|' ./qtwebengine/src/buildtools/config/common.pri && \
	cmake --build . --parallel && \
	cmake --install .

# Build Qt5 Source (native builds)
RUN \
	cd /opt/ && \
	wget -q https://download.qt.io/official_releases/qt/5.15/5.15.8/single/qt-everywhere-opensource-src-5.15.8.tar.xz && \
	tar -xf qt-everywhere-opensource-src-5.15.8.tar.xz && \
	rm qt-everywhere-opensource-src-5.15.8.tar.xz && \
	cd /opt/qt-everywhere-src-5.15.8 && \
	./configure -opensource -confirm-license -release -skip qtwebengine -nomake tests -nomake examples -qt-zlib -qt-libjpeg -qt-libpng -qt-freetype -xcb -sql-psql -sql-sqlite && \
	# sed -i -e 's|use_jumbo_build=true|use_jumbo_build=false|' ./qtwebengine/src/buildtools/config/common.pri && \
	make -j$(nproc) NINJAJOBS=-j30 && \
	make install
	
# Build FFmpeg (required for QTWebengine)
RUN \
	yum remove nasm -y && \
	cd /opt/ && \
	mkdir ffmpeg && \
	cd ffmpeg && \
	curl -O -L https://www.nasm.us/pub/nasm/releasebuilds/2.15.05/nasm-2.15.05.tar.bz2 && \
	tar xjvf nasm-2.15.05.tar.bz2 && \
	cd nasm-2.15.05 && \
	./autogen.sh && \
	./configure --prefix="/opt/ffmpeg/build" --bindir="/usr/local/ffmpeg/bin" && \
	make && \
	make install && \
	export PATH="${PATH}:/usr/local/ffmpeg/bin" && \
	cd /opt/ffmpeg && \
	curl -O -L https://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz && \
	tar xzvf yasm-1.3.0.tar.gz && \
	cd yasm-1.3.0 && \
	./configure --prefix="/opt/ffmpeg/build" --bindir="/usr/local/ffmpeg/bin" && \
	make && \
	make install && \
	cd /opt/ffmpeg && \
	git clone --branch stable --depth 1 https://code.videolan.org/videolan/x264.git && \
	cd x264 && \
	PKG_CONFIG_PATH="/opt/ffmpeg/build/lib/pkgconfig" ./configure --prefix="/opt/ffmpeg/build" --bindir="/usr/local/ffmpeg/bin" --enable-static && \
	make && \
	make install && \
	cd /opt/ffmpeg && \
	git clone --branch stable --depth 2 https://bitbucket.org/multicoreware/x265_git && \
	cd x265_git/build/linux && \
	cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="/opt/ffmpeg/build" -DENABLE_SHARED:bool=off ../../source && \
	make && \
	make install && \
	cd /opt/ffmpeg && \
	git clone --depth 1 https://github.com/mstorsjo/fdk-aac && \
	cd fdk-aac && \
	autoreconf -fiv && \
	./configure --prefix="/opt/ffmpeg/build" --disable-shared && \
	make && \
	make install && \
	cd /opt/ffmpeg && \
	curl -O -L https://downloads.sourceforge.net/project/lame/lame/3.100/lame-3.100.tar.gz && \
	tar xzvf lame-3.100.tar.gz && \
	cd lame-3.100 && \
	./configure --prefix="/opt/ffmpeg/build" --bindir="/usr/local/ffmpeg/bin" --disable-shared --enable-nasm && \
	make && \
	make install && \
	cd /opt/ffmpeg && \
	curl -O -L https://archive.mozilla.org/pub/opus/opus-1.3.1.tar.gz && \
	tar xzvf opus-1.3.1.tar.gz && \
	cd opus-1.3.1 && \
	./configure --prefix="/opt/ffmpeg/build" --disable-shared && \
	make && \
	make install && \
	cd /opt/ffmpeg && \
	git clone --depth 1 https://chromium.googlesource.com/webm/libvpx.git && \
	cd libvpx && \
	./configure --prefix="/opt/ffmpeg/build" --disable-examples --disable-unit-tests --enable-vp9-highbitdepth --as=yasm && \
	make && \
	make install && \
	cd /opt/ffmpeg && \
	curl -O -L https://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2 && \
	tar xjvf ffmpeg-snapshot.tar.bz2 && \
	cd ffmpeg && \
	export PKG_CONFIG_PATH="/opt/ffmpeg/lib/pkgconfig" && \
	./configure --prefix="/opt/ffmpeg" --pkg-config-flags="--static" --extra-cflags="-I/opt/ffmpeg/include" --extra-ldflags="-L/opt/ffmpeg/lib" --extra-libs=-lpthread --extra-libs=-lm --bindir="/usr/local/ffmpeg/bin" --enable-gpl --enable-libfdk_aac --enable-libfreetype --enable-libmp3lame --enable-libopus --enable-libvpx --enable-libx264 --enable-libx265 --enable-nonfree && \
	make && \
	make install

# Qt5 will not build Qtwebengine (with python3)
# build the newer 5.15.12 Qtwebengine and jam it back in 5.15.8
COPY qtwebengine-5.15.12.tar.xz_aa /opt/
COPY qtwebengine-5.15.12.tar.xz_ab /opt/
COPY qtwebengine-5.15.12.tar.xz_ac /opt/
COPY qtwebengine-5.15.12.tar.xz_ad /opt/
COPY qtwebengine-5.15.12-build_fixes-1.patch /opt/
COPY qtwebengine-5.15.12-ffmpeg5_fixes-1.patch /opt/
RUN \
	# Set our QT Path now, so we can build below
	export PATH="${PATH}:/usr/local/Qt-5.15.8/bin" && \
	export PATH="${PATH}:/usr/local/ffmpeg/bin" && \
	cd /opt/ && \
	cat qtwebengine-5.15.12.tar.xz_* >qtwebengine-5.15.12.tar.xz && \
	tar -xf qtwebengine-5.15.12.tar.xz && \
	rm -Rf qtwebengine-5.15.12.tar.xz* && \
	cd /opt/qtwebengine-5.15.12 && \
	patch -Np1 -i ../qtwebengine-5.15.12-build_fixes-1.patch && \
	patch -Np1 -i ../qtwebengine-5.15.12-ffmpeg5_fixes-1.patch && \
	mkdir -pv .git src/3rdparty/chromium/.git && \
	sed -e '/^MODULE_VERSION/s/5.*/5.15.8/' -i .qmake.conf && \
	find -type f -name "*.pr[io]" | xargs sed -i -e 's|INCLUDEPATH += |&$$QTWEBENGINE_ROOT/include |' && \
	sed -e '/link_pulseaudio/s/false/true/' -i src/3rdparty/chromium/media/media_options.gni && \
	sed -e 's/\^(?i)/(?i)^/' -i src/3rdparty/chromium/tools/metrics/ukm/ukm_model.py && \
	sed -e "s/'rU'/'r'/" -i src/3rdparty/chromium/tools/grit/grit/util.py && \
	sed -i 's/NINJAJOBS/NINJA_JOBS/' src/core/gn_run.pro && \
	sed -i -e 's|use_jumbo_build=true|use_jumbo_build=false|' src/buildtools/config/common.pri && \
	mkdir build && \
	cd build && \
	qmake .. -- -system-ffmpeg -proprietary-codecs -webengine-icu && \
	make -j$(nproc) NINJAJOBS=-j30 && \
	make install

# you can set your path to Qt5 or Qt6
#ENV PATH="${PATH}:/usr/local/Qt-6.4.2/bin"
ENV PATH="${PATH}:/usr/local/Qt-5.15.8/bin"
ENTRYPOINT ["/bin/bash"]